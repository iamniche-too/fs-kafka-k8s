---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka
  annotations:
    imageregistry: "https://hub.docker.com"
spec:
  serviceName: kafka-service
  replicas: 3 
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '19000'
    spec:
      initContainers:
        - name: init-config
          image: nichemley/fs-kafka-config-image 
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command: ['/bin/bash', '/etc/kafka-config-ro/generate-config.sh']
          volumeMounts:
          - name: kafka-config-volume-ro
            mountPath: /etc/kafka-config-ro
          - name: kafka-config-volume-rw
            mountPath: /etc/kafka-config-rw
        - name: prometheus-jmx-exporter
          image: spdigital/prometheus-jmx-exporter-kubernetes:0.3.1
          env:
          - name: SHARED_VOLUME_PATH
            value: /prometheus-shared-volume
          volumeMounts:
            - name: prometheus-shared-volume
              mountPath: /prometheus-shared-volume
      containers:
        - name: kafka
          image: wurstmeister/kafka
          ports:
            - containerPort: 9092
          command:
            - /opt/kafka/bin/kafka-server-start.sh
            - /etc/kafka-config-rw/server.properties
          env:
            - name: KAFKA_OPTS
              value: -javaagent:/prometheus-shared-volume/jmx_prometheus_javaagent.jar=19000:/prometheus-shared-volume/configs/kafka-config.yaml
          volumeMounts:
            - name: kafka-config-volume-ro
              mountPath: /etc/kafka-config-ro
            - name: kafka-config-volume-rw
              mountPath: /etc/kafka-config-rw
            - name: data
              mountPath: /var/lib/kafka
            - name: prometheus-shared-volume
              mountPath: /prometheus-shared-volume
          resources:
            requests:
              memory: "1Gi"
      volumes:
        - name: kafka-config-volume-ro
          configMap:
            name: kafka-config
        - name: kafka-config-volume-rw
          emptyDir: {}
        - name: prometheus-shared-volume
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
